scalar Date
scalar Upload

type Query {
  getNendoroids(
    filter: String
    skip: Int
    first: Int
    orderBy: NendoroidOrderByInput
  ): Nendoroids!
  getUsers(
    filter: String
    skip: Int
    first: Int
    orderBy: NendoroidOrderByInput
  ): Users!
  getSeries(
    filter: String
    skip: Int
    first: Int
    orderBy: NendoroidOrderByInput
  ): Series!
  getManufacturers(
    filter: String
    skip: Int
    first: Int
    orderBy: NendoroidOrderByInput
  ): Manufacturers!
  getSculptors(
    filter: String
    skip: Int
    first: Int
    orderBy: NendoroidOrderByInput
  ): Sculptors!
  getNendoroid(id: ID!): Nendoroid!
  getUser(id: ID!): User!
  getInteractions: Interactions!
  getNendoroidsLikedBy(id: ID!): Nendoroids!
  getNendoroidsWishedBy(id: ID!): Nendoroids!
  getNendoroidsOwnedBy(id: ID!): Nendoroids!
  getNendoroidsByRange(range: String!): Nendoroids!
  files: [String]
}

type Mutation {
  createNendoroid(formattedName: String!, number: String!): Nendoroid!
  signup(email: String!, password: String!, pseudo: String!): AuthPayload
  login(pseudo: String!, password: String!): AuthPayload
  createInteraction(
    nendoroidId: ID!
    userId: ID!
    type: InteractionType!
  ): Interaction
  deleteInteraction(interactionId: ID!): Interaction
  uploadFile(file: Upload!): Boolean
}

type AuthPayload {
  token: String
  user: User
}

type Nendoroids {
  nendoroids: [Nendoroid!]!
  count: Int!
}

type Interactions {
  interactions: [Interaction!]!
  count: Int!
}

type Users {
  users: [User!]!
  count: Int!
}

type Series {
  series: [Serie!]!
  count: Int!
}

type Nendoroid {
  id: ID!
  name: String
  number: Int
  formattedName: String!
  title: String
  description: [String!]!
  images: [String!]!
  series: String
  manufacturer: String
  category: String
  price: Int
  releaseDate: String
  specifications: String
  sculptor: String
  cooperation: String
  planningProduction: String
  releasedBy: String
  distributedBy: String
  srcUrl: String
  range: String
  interactions: [Interaction!]!
}

type User {
  id: ID!
  firstName: String
  lastName: String
  pseudo: String
  password: String!
  avatar: String
}

type Serie {
  id: ID!
  name: String!
}

type Manufacturer {
  id: ID!
  name: String!
}

type Manufacturers {
  manufacturers: [Manufacturer!]!
  count: Int!
}

type Sculptor {
  id: ID!
  name: String!
}

type Sculptors {
  sculptors: [Sculptor!]!
  count: Int!
}

type Subscription {
  newNendoroid: Nendoroid
  newInteraction: Interaction
}

type Interaction {
  id: ID!
  nendoroid: Nendoroid!
  user: User!
  type: InteractionType!
}

enum NendoroidOrderByInput {
  description_ASC
  description_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  number_ASC
  number_DESC
}

enum InteractionType {
  LIKE
  WISH
  OWN
}

type File {
  filename: String!
  mimetype: String!
  encoding: String!
}
